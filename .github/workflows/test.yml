name: "test"


on:
  pull_request:
    types: [synchronize]


permissions:
  contents: read
  issues: write
  pull-requests: write


jobs:
  cypress-e2e:
    needs: [check-translation]
    strategy:
      matrix:
        resolution:
          - 375x667    ## iphone-8
          - 1024x768
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: ðŸšš Get code
        uses: actions/checkout@v2
      - name: ðŸšš Get node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: ðŸšš Install dependencies
        run: |
          ## Need to unshallow to allow making the version number from
          ## git history.
          git fetch --unshallow --tags &&
          npm install
      - name: ðŸ”¨ Config
        run: |
          rm "public/config.sample.json"
          export GITHUB_REF_NAME="dev3"  ## Not ideal for test stability
          echo "{
            \"appName\": \"Monujo-CI-${GITHUB_REF_NAME}\",
            \"lokapiDb\": \"odoo\",
            \"lokapiHost\": \"${GITHUB_REF_NAME}.lokavaluto.fr\",
            \"mapUrl\": \"https://carte.${GITHUB_REF_NAME}.lokavaluto.fr\",
            \"logoUrl\": \"https://monujo.${GITHUB_REF_NAME}.lokavaluto.fr/img/logo.png\",
            \"loginLogoUrl\": \"https://monujo.${GITHUB_REF_NAME}.lokavaluto.fr/img/logo.png\",
            \"locales\": {
              \"availableLanguages\": {
                \"en-US\": {
                  \"label\": \"English (US)\"
                },
                \"fr-FR\": {
                  \"label\": \"FranÃ§ais (France)\",
                  \"url\": \"https://docker.0k.io/downloads/monujo.fr-FR.json\"
                }
              },
              \"appStringsLanguage\": \"en-US\",
              \"defaultLanguage\": \"en-US\",
              \"preferNavigatorLanguage\": true
            }
          }" > public/config.json
          cat public/config.json
      - name: âš™ Serve Application
        run: npm run serve &
      - name: âš” Run Cypress tests
        env:
          M_RESOLUTION: ${{ matrix.resolution }}
        run: |
          npx cypress run --project tests \
              --config viewportWidth=${M_RESOLUTION/x/,viewportHeight=}
      - name: âš” Collect mocha reports
        if: always()
        env:
          M_RESOLUTION: ${{ matrix.resolution }}
        run: |
          mkdir -p ".reports/${M_RESOLUTION}"
          mv tests/cypress/reports/mocha/*.json ".reports/${M_RESOLUTION}/"
      - name: â¬† Store mocha reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: mocha-report
          path: .reports


  cypress-report:
    needs: cypress-e2e
    if: always()
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: ðŸšš Get node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: ðŸšš Install dependencies
        run: |
          npm i mochawesome-merge mochawesome-report-generator
      - name: â¬‡ Retrieve mocha reports
        uses: actions/download-artifact@v3
        with:
          name: mocha-report
          path: .reports
      - name: ðŸ“ƒ Prepare reports
        if: always()
        run: |
          REPORTS_PATH='.reports'
          echo "=== Merging ==="
          ls -l "$REPORTS_PATH"/*/*.json
          echo "==============="
          npx mochawesome-merge "$REPORTS_PATH"/*/*.json \
              -o "$REPORTS_PATH"/index.json &&
          npx marge --charts=true --showPassed=false \
              --saveJson --reportFilename=report-merge \
              -o "$REPORTS_PATH" "$REPORTS_PATH"/index.json
      - name: ðŸ–… Send Cypress report as PR comment
        if: always()
        uses: dmitry/cypress-report-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pathname: .reports/report-merge.json


  check-translation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: ðŸšš Install dependencies
        run: |
          git fetch --unshallow --tags &&
          npm install &&
          sudo apt install gettext
      - name: âš” Check translation file
        id: translation
        run: |
          npm run gettext:extract
          if out=$(git diff --exit-code -- src/i18n/); then
              cat <<BASHEOF >> $GITHUB_OUTPUT
          result<<EOF
          ## âœ… translation is up-to-date
          EOF
          BASHEOF
              exit 0
          fi
          echo "=== raw diff output ==="
          echo "$out"
          echo "======================="
          comment_diff=$(echo "$out" | egrep -v '^(---|\+\+\+) ' | egrep '^(\+|-)' | egrep -v '^(\+|-)#: ') || true
          if [ -z "$comment_diff" ]; then
            comment_diff=$(git diff -- src/i18n/fr-FR/  | egrep -v '^(---|\+\+\+) ' | egrep '^(\+|-)' | egrep '^\+#: ' | cut -f 2 -d " " | cut -f 1 -d : | sort | uniq -c)
            message='PO file needs a simple update (no fuzzy entries found). Please run the command \`npm run gettext:extract\` before pushing the code to ensure that all necessary translations are included and the PO file is up-to-date.'
          else
            message='Found missing translations. Please run the command \`npm run gettext:extract\` before pushing the code to ensure that all necessary translations are included.'
          fi
          short_stat=$(git diff --shortstat -- src/i18n/)
          cat <<BASHEOF >> $GITHUB_OUTPUT
          result<<EOF
          ## :x: translation need update

          <p>

          $message

          </p>

          <details>
          <summary>$short_stat</summary>
          <p>

          \`\`\`diff
          $comment_diff
          \`\`\`

          </p>
          </details>
          EOF
          BASHEOF
          exit 1
      - name: ðŸ“ƒ Report failure
        if: always()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Translation report
          recreate: true
          message: |
            ${{steps.translation.outputs.result}}
